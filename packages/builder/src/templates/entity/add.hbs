import { collection, addDoc, serverTimestamp } from "firebase/firestore";
import { db } from "../{{#each parents}}../{{/each}}firebase";
import { AddService, EntityGet, DistributiveOmit } from "../{{#each parents}}../{{/each}}types";
import { {{entityInterface}} } from "./types";
import get from './get';

export type {{entityInterface}}AddService<T> = ({{> typedSubcollectionParams}}doc: DistributiveOmit<T, 'id'>) => Promise<EntityGet<T>>;


const add: {{entityInterface}}AddService<{{entityInterface}}> = async ({{> subcollectionParams}}data) => {
  const collectionRef = collection(db, `{{> subcollectionPath}}/{{entityName}}`);
  const now = serverTimestamp();
  const docRef = await addDoc(collectionRef, {
    ...data,
    createdAt: now,
    updatedAt: now,
  });
  return get({{> subcollectionParams}} docRef.id) as Promise<EntityGet<{{entityInterface}}>>;
};

export default add;
